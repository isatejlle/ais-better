{"ast":null,"code":"var _jsxFileName = \"/home/jjescobedo/Documents/Coding/AIS/Final Project/AIS-project/src/ActionButton.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ActionButton({\n  text,\n  additionalClasses = '',\n  additionalProperties = {},\n  onClick\n}) {\n  var _additionalProperties, _additionalProperties2, _additionalProperties3;\n  // Ensure onClick is not overridden by additionalProperties\n  const handleClick = e => {\n    if (onClick) {\n      onClick(e);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    id: (_additionalProperties = additionalProperties.id) !== null && _additionalProperties !== void 0 ? _additionalProperties : 'button',\n    type: (_additionalProperties2 = additionalProperties.type) !== null && _additionalProperties2 !== void 0 ? _additionalProperties2 : 'button' // Default to 'button' to prevent form submission unless specified\n    ,\n    form: (_additionalProperties3 = additionalProperties.form) !== null && _additionalProperties3 !== void 0 ? _additionalProperties3 : 'uploadImage',\n    className: `py-2 px-4 bg-blue-500 text-white font-bold rounded ${additionalClasses}` // Adjusted className for better sizing and visibility\n    ,\n    onClick: handleClick // Use handleClick to ensure onClick from props is called\n    ,\n    ...additionalProperties,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\n_c = ActionButton;\n;\n/*\r\n// Assuming the other file doesn't introduce new props, otherwise, add them here\r\nfunction ActionButton({ text, additionalClasses = '', additionalProperties = {} }) {\r\n  // Merge additionalProperties handling here. If the other file has different defaults or additional fields, adjust accordingly.\r\n  return (\r\n    <input\r\n      id={additionalProperties.id ?? 'button'}\r\n      type={additionalProperties.type ?? 'submit'}\r\n      form={additionalProperties.form ?? 'uploadImage'}\r\n      // Combine className strings from both files, adjust as necessary if the other file has different or additional styling\r\n      className={`justify-center py-9 pr-20 pl-16 bg-sky-700 rounded-xl border border-black border-solid shadow-md max-md:pr-8 max-md:pl-7 max-md:text-4xl ${additionalClasses}`}\r\n      value={text}\r\n      name=\"submit\"\r\n    />\r\n  );\r\n};\r\n*/\nexport default ActionButton;\nvar _c;\n$RefreshReg$(_c, \"ActionButton\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ActionButton","text","additionalClasses","additionalProperties","onClick","_additionalProperties","_additionalProperties2","_additionalProperties3","handleClick","e","id","type","form","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/jjescobedo/Documents/Coding/AIS/Final Project/AIS-project/src/ActionButton.js"],"sourcesContent":["import React from 'react';function ActionButton({ text, additionalClasses = '', additionalProperties = {}, onClick }) {\r\n  // Ensure onClick is not overridden by additionalProperties\r\n  const handleClick = (e) => {\r\n    if (onClick) {\r\n      onClick(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <button\r\n      id={additionalProperties.id ?? 'button'}\r\n      type={additionalProperties.type ?? 'button'} // Default to 'button' to prevent form submission unless specified\r\n      form={additionalProperties.form ?? 'uploadImage'}\r\n      className={`py-2 px-4 bg-blue-500 text-white font-bold rounded ${additionalClasses}`} // Adjusted className for better sizing and visibility\r\n      onClick={handleClick} // Use handleClick to ensure onClick from props is called\r\n      {...additionalProperties} // Spread additionalProperties last to allow manual overrides except for onClick\r\n    >\r\n      {text}\r\n    </button>\r\n  );\r\n};\r\n/*\r\n// Assuming the other file doesn't introduce new props, otherwise, add them here\r\nfunction ActionButton({ text, additionalClasses = '', additionalProperties = {} }) {\r\n  // Merge additionalProperties handling here. If the other file has different defaults or additional fields, adjust accordingly.\r\n  return (\r\n    <input\r\n      id={additionalProperties.id ?? 'button'}\r\n      type={additionalProperties.type ?? 'submit'}\r\n      form={additionalProperties.form ?? 'uploadImage'}\r\n      // Combine className strings from both files, adjust as necessary if the other file has different or additional styling\r\n      className={`justify-center py-9 pr-20 pl-16 bg-sky-700 rounded-xl border border-black border-solid shadow-md max-md:pr-8 max-md:pl-7 max-md:text-4xl ${additionalClasses}`}\r\n      value={text}\r\n      name=\"submit\"\r\n    />\r\n  );\r\n};\r\n*/\r\nexport default ActionButton;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAASC,YAAYA,CAAC;EAAEC,IAAI;EAAEC,iBAAiB,GAAG,EAAE;EAAEC,oBAAoB,GAAG,CAAC,CAAC;EAAEC;AAAQ,CAAC,EAAE;EAAA,IAAAC,qBAAA,EAAAC,sBAAA,EAAAC,sBAAA;EACpH;EACA,MAAMC,WAAW,GAAIC,CAAC,IAAK;IACzB,IAAIL,OAAO,EAAE;MACXA,OAAO,CAACK,CAAC,CAAC;IACZ;EACF,CAAC;EAED,oBACEV,OAAA;IACEW,EAAE,GAAAL,qBAAA,GAAEF,oBAAoB,CAACO,EAAE,cAAAL,qBAAA,cAAAA,qBAAA,GAAI,QAAS;IACxCM,IAAI,GAAAL,sBAAA,GAAEH,oBAAoB,CAACQ,IAAI,cAAAL,sBAAA,cAAAA,sBAAA,GAAI,QAAS,CAAC;IAAA;IAC7CM,IAAI,GAAAL,sBAAA,GAAEJ,oBAAoB,CAACS,IAAI,cAAAL,sBAAA,cAAAA,sBAAA,GAAI,aAAc;IACjDM,SAAS,EAAE,sDAAsDX,iBAAiB,EAAG,CAAC;IAAA;IACtFE,OAAO,EAAEI,WAAY,CAAC;IAAA;IAAA,GAClBL,oBAAoB;IAAAW,QAAA,EAEvBb;EAAI;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEb;AAACC,EAAA,GApBkCnB,YAAY;AAoB9C;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAeA,YAAY;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}